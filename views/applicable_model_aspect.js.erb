require(['jquery', 'YSDEntityManagement', 'YSDEntityManagementComplementHooks', 'YSDRemoteDataSource', 'YSDListSelector'], function($, EntityManagement, EntityManagementComplementHooks, RemoteDataSource, ListSelector) {

  function EntityInfoHook() {
 	   
    this.entityKey = function(entity) {
      return entity.id;
    }

    this.onRenderEntities = function(entities) {    
      $('.new-entity-button').hide();
    }  

    this.onEdit = function(entity) {
      $('#id').attr('readonly', true);
    };
  
    this.adaptFormData = function(data) {  	
      data.aspects = this.adaptAspects(data.aspects, data.id);
      return data;	
    }
    
    this.adaptAspects = function(aspects, entity) { /* It converts from an array of string (each is an aspect) to an array of ContentTypeAspect */
      
      if (!(aspects instanceof Array)) {
        aspects = [aspects];
      }

      return aspects.map(function(value, index, array) {

         return { aspect : value,
                  target_model : entity
                };   

      });

    }

  	  	
  };
  
  var urls = { 
  	           query_url  : '/api/aspects/models',
    	         create_url : '/api/aspects/model',
  	           update_url : '/api/aspects/model',
  	           delete_url : '/api/aspects/model',
  	           get_url    : '/api/aspects/model'
  	         };

  var entityInfoHook = new EntityInfoHook();

  var hooks = [entityInfoHook];
  
  // Add the complement hooks
  hooks = hooks.concat(EntityManagementComplementHooks.complements);

  var entityInfoManager = new EntityManagement(urls, 'aspects', 12, hooks, {prefix: '/admin/config'});
   
});